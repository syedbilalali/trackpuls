<UserControl x:Class="trackpuls.Views.LoginView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"   
             xmlns:local="clr-namespace:trackpuls.Views"
             xmlns:cal="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro.Platform"
             xmlns:properties="clr-namespace:trackpuls.AttachedProperties"
             mc:Ignorable="d" 
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             TextElement.FontWeight="Regular"
             TextElement.FontSize="13"
             TextOptions.TextFormattingMode="Ideal"
             TextOptions.TextRenderingMode="Auto"
             Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{DynamicResource MaterialDesignFont}" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}">
    <UserControl.Resources>
        <ResourceDictionary>

            <Storyboard x:Key="FlashErrorIcon">
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" 
									   Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Hidden}"/>
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.2000000" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.4000000" Value="{x:Static Visibility.Hidden}"/>
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.6000000" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.8000000" Value="{x:Static Visibility.Hidden}"/>
                    <DiscreteObjectKeyFrame KeyTime="00:00:01" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>

            
            <Style x:Key="myErrorTemplate" TargetType="Control">
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <DockPanel LastChildFill="True">
                                <Ellipse DockPanel.Dock="Right" 
										ToolTip="{Binding ElementName=myTextbox, 
										Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
										Width="15"
										Height="15" 
										Margin="-25,0,0,0"
										StrokeThickness="1" 
										Fill="Red" 
								>
                                    <Ellipse.Stroke>
                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                            <GradientStop Color="#FFFA0404" Offset="0"/>
                                            <GradientStop Color="#FFC9C7C7" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Ellipse.Stroke>
                                    <Ellipse.Triggers>
                                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                            <BeginStoryboard Storyboard="{StaticResource FlashErrorIcon}"/>
                                        </EventTrigger>
                                    </Ellipse.Triggers>

                                </Ellipse>
                                <TextBlock DockPanel.Dock="Right" 
								ToolTip="{Binding ElementName=myControl, 
									 Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
								Foreground="White"
								FontSize="11pt" 
								Margin="-15,5,0,0" FontWeight="Bold">!
                                    <TextBlock.Triggers>
                                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                            <BeginStoryboard Storyboard="{StaticResource FlashErrorIcon}"/>
                                        </EventTrigger>
                                    </TextBlock.Triggers>
                                </TextBlock>
                                <Border BorderBrush="Red" BorderThickness="1">
                                    <AdornedElementPlaceholder Name="myControl"/>
                                </Border>
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip"
						Value="{Binding RelativeSource={x:Static RelativeSource.Self},
						Path=(Validation.Errors)[0].ErrorContent}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Force the TextBox to use the error template --><!--
            <Style TargetType="TextBox" BasedOn="{StaticResource myErrorTemplate}" >
                <Setter Property="Margin" Value="2"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
            </Style>

            --><!-- Force the TextBox to use the error template --><!--
            <Style TargetType="PasswordBox" BasedOn="{StaticResource myErrorTemplate}" >
                <Setter Property="Margin" Value="2"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
            </Style>-->

            <Style TargetType="TextBlock" >
                <Setter Property="Margin" Value="2"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Foreground" Value="Green"/>
            </Style>

            <Style TargetType="HeaderedContentControl" >
                <Setter Property="Margin" Value="2"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>
    <Grid  Height="auto" Width="auto">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="43*"/>
                <ColumnDefinition Width="7*"/>
            </Grid.ColumnDefinitions>
            <DockPanel LastChildFill = "True" Grid.ColumnSpan="2" >
                <StackPanel DockPanel.Dock="Bottom" Orientation="Vertical" >
                    <Label Content="Welcome!" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,25,0,0" Foreground="Gray" FontSize="25"/>
                    <Label Content="Enter your details below" HorizontalAlignment="Center" VerticalAlignment="Top"  Foreground="Gray" FontSize="15"/>
                    <Grid VerticalAlignment="Bottom" Margin="15,45">
                        <Label Content="Email" HorizontalAlignment="Left" VerticalAlignment="Top"   Foreground="Gray" FontWeight="Medium"  FontSize="12"/>
                        <TextBox  Margin="0,20" x:Name="Email" MaxLength="25"   FontFamily="Champagne &amp; Limousines" FontSize="18">
                           
                        </TextBox>

                    </Grid>
                    <Grid VerticalAlignment="Center" Margin="15,0">
                        <Label Content="Password" HorizontalAlignment="Left" VerticalAlignment="Top"    Foreground="Gray" FontWeight="Medium"  FontSize="12"/>
                        <PasswordBox Margin="0,20"  FontFamily="Champagne &amp; Limousines" MaxLength="25"  FontSize="18" cal:Message.Attach="[Event PasswordChanged] = [Action PasswordChanged($source)]"
				         properties:PasswordHelper.Attach="True" />
                        <!--<Label Content="Forgot Password?" HorizontalAlignment="Right"  VerticalAlignment="Bottom"     Foreground="Gray" FontWeight="Medium"  FontSize="10"/>-->
                    </Grid>
                    <Grid VerticalAlignment="Bottom" Margin="10,40,10,0">
                        <StackPanel Orientation="Vertical">
                            <Button x:Name="btnsignIn" Width="350" Height="40" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="15,0" Content="Sign In" IsEnabled="{Binding NoValidationErrors}"  RenderTransformOrigin="0.511,-0.773" IsDefault="True"/>
                            <Label Content="or" HorizontalAlignment="Center" Visibility="Hidden" VerticalAlignment="Stretch"    Foreground="Gray" FontWeight="Light"  FontSize="16"/>
                            <Button Width="350" Height="40" HorizontalAlignment="Center" Visibility="Hidden" Background="White" Foreground="#FF2196F3" VerticalAlignment="Bottom" Margin="0" Content="Continue with Google" BorderBrush="#FFF4F7F9"/>
                        </StackPanel>
                    </Grid>
                </StackPanel>
            </DockPanel>
        </Grid>
    </Grid>
</UserControl>
